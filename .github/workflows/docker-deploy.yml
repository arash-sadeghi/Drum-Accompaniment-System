name: Build and Deploy Docker Image to AWS ECR 

on:
  push:
    branches:
      - aws 

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ECR_REPOSITORY: das
      IMAGE_TAG: latest



    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker image to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          echo ${{ github.sha }}
          echo $ECR_REPOSITORY
          echo "$ECR_REPOSITORY"

          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Post successful build
        run: echo "Docker image built and pushed to ECR!"

      - name: Deploy to EC2 instance
        uses: appleboy/ssh-action@master
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}

        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          envs: ECR_REGISTRY,ECR_REPOSITORY,IMAGE_TAG
          script: |
            echo "pulling $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            docker pull "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
            sudo docker run --name das  -p 3009:3009 -d "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
